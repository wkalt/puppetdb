%global realname classifier
%global realversion <%= @version %>
%global rpmversion <%= @rpmversion %>
%global open_jdk          java-1.7.0-openjdk
%global puppet_libdir     %(ruby -rrbconfig -e "puts Config::CONFIG['vendorlibdir']")

# These macros are not always defined on much older rpm-based systems
%global  _sharedstatedir /var/lib
%global  _realsysconfdir /etc
%global  _initddir   %{_realsysconfdir}/rc.d/init.d
%global _rundir /var/run

# F17 supports systemd, but we don't support F17 and we use F18+ features in
# our systemd support
%if 0%{?fedora} >= 18 || 0%{?rhel} >= 7
%global _with_systemd 1
%else
%global _with_systemd 0
%endif

%define __jar_repack 0


Name:          classifier
Version:       <%= @rpmversion %>
Release:       <%= @rpmrelease %>%{?dist}
BuildRoot:     %{_tmppath}/%{realname}-%{version}-%{release}-root-%(%{__id_u} -n)

Summary:       Puppet Labs version-checking backend
License:       ASL 2.0

URL:           http://github.com/puppetlabs/classifier
Source0:       http://downloads.puppetlabs.com/classifier/%{realname}-%{realversion}.tar.gz

Group:         System Environment/Daemons

BuildRequires: ruby
BuildArch:     noarch
BuildRequires: /usr/sbin/useradd
%if %{_with_systemd}
Requires(post): systemd
Requires(preun): systemd
Requires(postun): systemd
Requires:       systemd
BuildRequires:  systemd
%else
Requires:       chkconfig
%endif
Requires:      %{open_jdk}

%description
Puppet Labs version-checking backend.

%package terminus
Summary: Puppet terminus files to connect to PuppetDB
Group: Development/Libraries
Requires: puppet >= 3.3

%description terminus
A Puppet Node Terminus for the classifier

%prep
%setup -q -n %{realname}-%{realversion}

%build

%install

rm -rf $RPM_BUILD_ROOT

env DESTDIR=%{buildroot} prefix=/usr initdir=%{_initddir} make -e install-classifier
env DESTDIR=%{buildroot} prefix=/usr rubylibdir=%{puppet_libdir} make -e install-terminus

%clean
rm -rf $RPM_BUILD_ROOT

%pre
%if %{_with_systemd}
%else
# Here we'll do a little bit of cleanup just in case something went horribly
# awry during a previous install/uninstall:
if [ -f "/usr/share/classifier/start_service_after_upgrade" ] ; then
   rm /usr/share/classifier/start_service_after_upgrade
fi
# If this is an upgrade (as opposed to an install) then we need to check
#  and see if the service is running.  If it is, we need to stop it.
#  we want to shut down and disable the service.
if [ "$1" = "2" ] ; then
    if /sbin/service %{name} status > /dev/null ; then
        # If we need to restart the service after the upgrade
        #  is finished, we will touch a temp file so that
        #  we can detect that state
        touch /usr/share/classifier/start_service_after_upgrade
        /sbin/service %{name} stop >/dev/null 2>&1
    fi
fi
%endif

# Add classifier user
getent group %{name} > /dev/null || groupadd -r %{name}
getent passwd %{name} > /dev/null || \
useradd -r -g %{name} -d /usr/share/classifier -s /sbin/nologin \
     -c "classifier daemon"  %{name}

%post
%if %{_with_systemd}
%systemd_post classifier.service
%else
if [ "$1" = "1" ]; then
  # Register the classifier service
  /sbin/chkconfig --add %{name}
fi
%endif

%preun
%if %{_with_systemd}
%systemd_preun classifier.service
%else
if [ "$1" = "0" ] ; then
    /sbin/service %{name} stop >/dev/null 2>&1
    /sbin/chkconfig --del %{name}
fi
%endif

%postun
%if %{_with_systemd}
%systemd_postun_with_restart classifier.service
%else
# Remove the rundir if this is an uninstall (as opposed to an upgrade)...
if [ "$1" = "0" ]; then
    rm -rf %{_rundir}/%{name} || :
fi

# If this is an upgrade (as opposed to an install) then we need to check
#  and see if we stopped the service during the install (we indicate
#  this via the existence of a temp file that was created during that
#  phase).  If we did, then we need to restart it.
if [ "$1" = "1" ] ; then
    if [ -f "/usr/share/classifier/start_service_after_upgrade" ] ; then
        rm /usr/share/classifier/start_service_after_upgrade
        /sbin/service %{name} start >/dev/null 2>&1
    fi
fi
%endif


%files
%defattr(-, root, root)
%doc *.md
%{_datadir}/%{realname}
%if %{_with_systemd}
%{_unitdir}/%{name}.service
%else
%{_initddir}/%{name}
%endif
%dir %{_sysconfdir}/%{name}
%dir %{_sysconfdir}/%{name}/ssl
%config(noreplace) %{_sysconfdir}/%{name}/%{name}.ini
%{_sysconfdir}/sysconfig/%{name}
%ghost %{_rundir}/%{name}

%files terminus
%defattr(-, root, root)
%{puppet_libdir}/puppet/indirector/node/classifier.rb

%changelog
* <%= Time.now.strftime("%a %b %d %Y") %> Puppet Labs Release <info@puppetlabs.com> -  <%= @rpmversion %>-<%= @rpmrelease %>
- Build for <%= @version %>

